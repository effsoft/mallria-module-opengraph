<?php

namespace app\components;

use Yii;
use yii\base\Component;

/**
 * @property $opengraph \app\components\OpenGraph
 * @property OpenGraph title
 * @property OpenGraph optMetaData
*/
class OpenGraph
{
    /**
     * Metadata basic
     *
     * @var array
    */
    private static $_metadata = [
        'title',
        'type',
        'image',
        'image' => [
            '',
            'width',
            'height',
        ],
        'url',
        'description',
        'audio',
        'locale',
        'site_name',
        'video',
    ];

    /**
     * @param string $name
     * @param array $params
     * @return mixed
     */
    public function __call($name, $params)
    {


        if(array_key_exists($name, self::$_metadata)) {
            $new = $params;
            $getValue = array_shift($new);

            if(is_array($getValue)) {
                foreach ($getValue as $key => $value) {
                    $property = !empty($key) ? $name . ':' . $key : $name;
                    $this->registerOpenGraph($property, $value);
                }
            }
        }

//        var_dump($params, $name);
//        die;
        if(in_array($name, self::$_metadata)) {
             $getValue = array_shift($params);

             if(!is_array($getValue)) {
                $this->registerOpenGraph($name, $getValue);
             }


        } else {
            return parent::__call($name, $params); // TODO: Change the autogenerated stub
        }
    }

    /**
     * @param string $name
     * @param array $params
     * @return mixed
     */
    protected function moreProperty($name, $params)
    {


    }


    /**
     * Register new element of open graph
     *
     * @param string $property Property for metadata
     * @param mixed $content Content for metadata
     * @throws \InvalidArgumentException
    */
    protected function registerOpenGraph(string $property,  $content)
    {
        Yii::$app->view->registerMetaTag([
            'property' => 'og:' . $property,
            'content'  => $content
        ]);
    }

    /**
     * Set array for all metadata
     * Example for use
     * [
     *  'title'       => 'Lorem ipsum',
     *  'description' => 'lorem ipsum'
     * ]
     *
     * @param array $opt Set data array
     * @throws \InvalidArgumentException
    */
    public function optMetaData(array $opt)
    {

//        $metaData = array_map(function($meta, $input) {
//            if(in_array())
//            die;
//        },self::$_metadata, array_keys($opt));
    }

}